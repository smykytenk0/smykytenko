{"ast":null,"code":"var _jsxFileName = \"D:\\\\mypr\\\\first_project\\\\my_pr\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport React from 'react';\nimport { AddMessageActionCreator, updateNewMessageTextActionCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\n\nconst DialogsContainer = props => {\n  let state = props.store.getState().dialogsPage;\n\n  let addMessage = () => {\n    props.store.dispatch(AddMessageActionCreator());\n  };\n\n  let onMessageChange = text => {\n    props.store.dispatch(updateNewMessageTextActionCreator(text));\n  };\n\n  return React.createElement(Dialogs, {\n    addMessage: addMessage,\n    onMessageChange: onMessageChange,\n    dialogsPage: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n};\n\nexport default DialogsContainer;","map":{"version":3,"sources":["D:/mypr/first_project/my_pr/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","AddMessageActionCreator","updateNewMessageTextActionCreator","Dialogs","DialogsContainer","props","state","store","getState","dialogsPage","addMessage","dispatch","onMessageChange","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,uBAAR,EAAiCC,iCAAjC,QAAyE,6BAAzE;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAEhC,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,WAAnC;;AAEA,MAAIC,UAAU,GAAG,MAAM;AACnBL,IAAAA,KAAK,CAACE,KAAN,CAAYI,QAAZ,CAAqBV,uBAAuB,EAA5C;AACH,GAFD;;AAIA,MAAIW,eAAe,GAAIC,IAAD,IAAS;AAC3BR,IAAAA,KAAK,CAACE,KAAN,CAAYI,QAAZ,CAAqBT,iCAAiC,CAACW,IAAD,CAAtD;AACH,GAFD;;AAGA,SACI,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEH,UAArB;AAAiC,IAAA,eAAe,EAAEE,eAAlD;AAAoE,IAAA,WAAW,EAAEN,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAdD;;AAgBA,eAAeF,gBAAf","sourcesContent":["import React from 'react';\r\nimport {AddMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nconst DialogsContainer = (props) => {\r\n\r\n    let state = props.store.getState().dialogsPage;\r\n\r\n    let addMessage = () => {\r\n        props.store.dispatch(AddMessageActionCreator());\r\n    };\r\n\r\n    let onMessageChange = (text) =>{\r\n        props.store.dispatch(updateNewMessageTextActionCreator(text));\r\n    };\r\n    return (\r\n        <Dialogs addMessage={addMessage} onMessageChange={onMessageChange}  dialogsPage={state}/>\r\n    );\r\n};\r\n\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}